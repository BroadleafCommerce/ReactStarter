###
# #%L
# Reference Site Core
# %%
# Copyright (C) 2009 - 2016 Broadleaf Commerce
# %%
# Broadleaf Commerce React Starter
# 
# Written in 2017 by Broadleaf Commerce info@broadleafcommerce.com
# 
# To the extent possible under law, the author(s) have dedicated all copyright and related and neighboring rights to this software to the public domain worldwide. This software is distributed without any warranty.
# You should have received a copy of the CC0 Public Domain Dedication along with this software. If not, see <http://creativecommons.org/publicdomain/zero/1.0/>.
# 
# Please Note - The scope of CC0 Public Domain Dedication extends to Broadleaf Commerce React Starter demo application alone. Linked libraries (including all Broadleaf Commerce Framework libraries) are subject to their respective licenses, including the requirements and restrictions specified therein.
# #L%
###
# These settings override and append settings in:

# common-shared.properties

# Please see common-shared.properties for more information on how the properties files work
    
# Allows us to load demo images from the classpath.   This would be an expensive approach
# for most implementations and should only be done in dev.   Images should be on a 
# shared file system or the DB when in non-development environments
asset.server.file.classpath.directory=/cms/static

# Because we are blanking the value out here, broadleaf will use System.setProperty("java.io.tmpdir")
# This would NOT make sense in non-development environments since the OS may delete files in that
# directory.
# 
# In non-development environments, this defaults to "/broadleaf/assets".
asset.server.file.system.path=

blPU.hibernate.hbm2ddl.auto=create
blCMSStorage.hibernate.hbm2ddl.auto=create
blSecurePU.hibernate.hbm2ddl.auto=create
blEventPU.hibernate.hbm2ddl.auto=create

# Cache page templates for just 2 seconds in development (allows for caching during a single request)
cache.page.templates.ttl=2000
messages.cacheSeconds=2
cache.entity.dao.metadata.ttl=2000
thymeleaf.view.resolver.cache=false


# Note that when bundle.enabled is normally set to false in development as changes to 
# file based resources (like CSS and JS) will not be picked up until the server is restarted 
# if this setting is true   
bundle.enabled=false

# Don't version resources in development.   If this property is true then changes to resources
# on the file-system will require a server restart to be picked up.
# 
# Used by blc:bundle and blc:resource tags to better support client-side browser
# caching (see the "staticResourceBrowserCacheSeconds" property below). 
resource.versioning.enabled=false

# Add no-cache headers to static resources in development to simplify debugging.
#
# This property represents the number of seconds to add to static file cache headers.    This property is used
# in the "demo" applicationContext.xml to set the cache-seconds property for 
# HTTPResourceHandlers    
# See org.springframework.web.servlet.resource.ResourceHttpRequestHandler
staticResourceBrowserCacheSeconds=0

# Don't minify static resources (JS and CSS) in dev as it makes debugging to difficult
minify.enabled=false

# Don't cache resources or transformations in development
resource.transformer.caching.enabled=false
resource.caching.enabled=false

# BaseURL Config
site.baseurl=http://localhost:3000
admin.baseurl=http://localhost:8081/admin
# Multi-Site BaseURL Config
site.baseurl.domain=blc.dev
site.baseurl.port=3000
site.baseurl.secure=false
admin.baseurl.domain=blc.dev
admin.baseurl.port=8081
admin.baseurl.secure=false
admin.baseurl.context=admin

crossapp.requireSsl=false

